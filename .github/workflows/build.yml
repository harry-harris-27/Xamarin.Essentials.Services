name: .NET Core

on:
  push:
  pull_request:
  release:
    types:
      - published

env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Project name to pack and publish
  PROJECT_NAME: "Xamarin.Essentials.Services"
  # GitHub Packages Feed settings
  GITHUB_FEED: https://nuget.pkg.github.com/Xamarin.Essentials.Services/
  GITHUB_USER: harry-harris-27
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Official NuGet Feed settings
  NUGET_FEED: https://api.nuget.org/v3/index.json
  NUGET_KEY: ${{ secrets.NUGET_API_KEY }}
  CONFIGURATION: 'Release'
  DOTNET_VERSION: 3.1.x
  
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
     
    - name: Restore dependencies 
      run: dotnet restore src
      
    - name: Build
      run: dotnet build src --configuration ${{ env.CONFIGURATION }} --no-restore
      
    - name: Test
      run: dotnet test src --configuration ${{ env.CONFIGURATION }} --no-build --verbosity normal
      
    - name: Pack
      if: matrix.os == 'ubuntu-latest'
      run: dotnet pack -v normal -c ${{ env.CONFIGURATION }} --no-restore --include-symbols --include-source -p:PackageVersion=$GITHUB_RUN_ID src/${{ env.PROJECT_NAME }}/*.csproj
    
    - name: Upload Artifact
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v2
      with:
        name: nupkg
        path: ./src/${{ env.PROJECT_NAME }}/bin/Release/*.nupkg

  prerelease:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: nupkg
      - name: Push to GitHub Feed
        run: |
          for f in ./nupkg/*.nupkg
          do
            curl -vX PUT -u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@$f $GITHUB_FEED
          done
          
  release:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2        
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          version: ${{ env.DOTNET_VERSION }}
      - name: Create NuGet package
        run: |
          arrTag=(${GITHUB_REF//\// })
          VERSION="${arrTag[2]}"
          VERSION="${VERSION//v}"
          dotnet pack -v normal -c ${{ env.CONFIGURATION }} --include-symbols --include-source -p:PackageVersion=$VERSION -o nupkg src/$PROJECT_NAME/$PROJECT_NAME.*proj
      - name: Push to GitHub Feed
        run: |
          for f in ./nupkg/*.nupkg
          do
            curl -vX PUT -u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@$f $GITHUB_FEED
          done
      - name: Push to NuGet Feed
        run: dotnet nuget push ./nupkg/*.nupkg --source $NUGET_FEED --skip-duplicate --api-key $NUGET_KEY
            
